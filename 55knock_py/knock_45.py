# リスト内に格納された辞書の特定のキーの値でソート（lambda式、sortedの引数key）

# bの値で降順に出力
li = [{'a': 6, 'b': 7, 'c': 6},
      {'a': 4, 'b': 2, 'c': 3},
      {'a': 1, 'b': 5, 'c': 8}]

# このようなファイルはJSONファイルなどを読み込むとよく目にする。

print(sorted(li, key=lambda x: x['b'], reverse=True))
# => [{'a': 6, 'b': 7, 'c': 6}, {'a': 1, 'b': 5, 'c': 8}, {'a': 4, 'b': 2, 'c': 3}]

# 引数key ====================
# sortedにはkeyという引数をとることができる。
# これはソート対象のオブジェクトに対して、どの値に注目すればいいかを指定することができる。
# keyには『オブジェクトを引数として注目する値を返す関数』を代入することで期待した結果が得られる。
# これはつまり何らかの返り値が欲しいということ。

# lambda 式 ==================
# 名前のない関数の記法。
# 『lambda 引数:返り値』で名前のない関数を作成する。
# また、複数行にまたがる文を使うことはできない。（ifを使いたいなら三項演算子を使う）
# 共通のkeyがないときはget()を使う

# 今回のような場合は『sorted(リスト, key=lambda x-arg:x-return, reverse=True』のように表せる。




